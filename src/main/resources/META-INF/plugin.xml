<idea-plugin>
    <id>se.de.hu_berlin.informatik.visual-trace-debugger</id>
    <name>Visual Trace Debugger</name>
    <category>Code Coverage</category>
    <vendor email="heiden@informatik.hu-berlin.de"
            url="https://www.informatik.hu-berlin.de/de/forschung/gebiete/se">HU-Berlin
    </vendor>

    <description>Visual debugging aid that allows the user to navigate within visual
        representations of execution traces.
    </description>

    <!-- please see https://www.jetbrains.org/intellij/sdk/docs/basics/getting_started/plugin_compatibility.html
         on how to target different products -->
    <!-- these dependencies register Test Listeners. Maybe we need to implement our own Listeners here?...
    <depends optional="true" config-file="testng-integration.xml">TestNG-J</depends>
    <depends optional="true" config-file="junit-integration.xml">JUnit</depends> -->

    <!-- this is the IntelliJ IDE coverage plugin. We extend its IDEA Coverage Runner! -->
    <depends>Coverage</depends>

    <depends>com.intellij.modules.platform</depends>
    <!-- <depends>com.intellij.modules.coverage</depends>
    <depends>com.intellij.modules.java</depends> -->

    <extensions defaultExtensionNs="com.intellij">
        <!-- application level service -->
        <!-- example taken from here: https://github.com/JetBrains/intellij-sdk-docs/tree/master/code_samples -->
        <!-- <applicationService serviceInterface="se.de.hu_berlin.informatik.vtdbg.samples.services.ProjectCountingService"
                            serviceImplementation="se.de.hu_berlin.informatik.vtdbg.samples.services.impl.ProjectCountingServiceImpl"/> -->

        <!-- project level service -->
        <!-- <projectService serviceInterface="se.de.hu_berlin.informatik.vtdbg.samples.services.MyProjectService"
                        serviceImplementation="se.de.hu_berlin.informatik.vtdbg.samples.services.impl.MyProjectServiceImpl"/> -->

        <!-- coverage runner extension - can be selected when editing Run Configuration -->
        <projectConfigurable groupId="build" instance="se.de.hu_berlin.informatik.vtdbg.coverage.MyCoverageOptionsConfigurable" id="coverage"
                             bundle="messages.CoverageBundle" key="configurable.CoverageOptionsConfigurable.display.name"/>

        <projectService serviceImplementation="se.de.hu_berlin.informatik.vtdbg.coverage.MyViewManager"/>
        <coverageRunner implementation="se.de.hu_berlin.informatik.vtdbg.coverage.IDEATraceCoverageRunner"/>
        <executor implementation="se.de.hu_berlin.informatik.vtdbg.coverage.MyCoverageExecutor" />
        <testActionProvider implementation="se.de.hu_berlin.informatik.vtdbg.coverage.MyTrackCoverageActionProvider"/>
    </extensions>

    <actions>
        <group id="CoverageMenu">
            <action id="SwitchCoverage" class="com.intellij.coverage.actions.SwitchCoverageSuiteAction" text="Show Co_verage Data..."/>
            <action id="GenerateCoverageReport" class="se.de.hu_berlin.informatik.vtdbg.coverage.MyGenerateCoverageReportAction"
                    text="_Generate Coverage Report..." icon="AllIcons.ToolbarDecorator.Export"/>
            <action id="HideCoverage" class="com.intellij.coverage.actions.HideCoverageInfoAction"/>
            <separator/>
        </group>
        <group id="CoveragePlatformMenu" popup="false">
            <reference ref="CoverageMenu"/>
            <add-to-group group-id="RunTestGroup" anchor="last"/>
        </group>
    </actions>

<!--    <project-components>
        <component>
            <interface-class>com.intellij.coverage.CoverageDataManager</interface-class>
            <implementation-class>se.de.hu_berlin.informatik.vtdbg.coverage.MyCoverageDataManagerImpl</implementation-class>
            <option name="workspace" value="true"/>
        </component>
    </project-components>-->

    <!-- some example listeners on application and project level -->
    <applicationListeners>
        <!-- <listener class="se.de.hu_berlin.informatik.vtdbg.samples.listeners.MyVfsListener"
                  topic="com.intellij.openapi.vfs.newvfs.BulkFileListener"/> -->
    </applicationListeners>

    <projectListeners>
        <!-- <listener class="se.de.hu_berlin.informatik.vtdbg.samples.listeners.MyToolwindowListener"
                  topic="com.intellij.openapi.wm.ex.ToolWindowManagerListener"/> -->
    </projectListeners>

    <!-- some example actions -->
    <actions>
        <!-- Add your actions here -->
        <!-- <action id="se.de.hu_berlin.informatik.vtdbg.samples.actions.PopupDialogAction"
                class="se.de.hu_berlin.informatik.vtdbg.samples.actions.PopupDialogAction"
                text="My Debugging Plugin: Pop Dialog Action"
                description="Some description!"
                icon="VisualTraceDebuggerIcons.VISUAL_TRACE">
            <override-text place="MainMenu" text="Pop Dialog Action"/>
            <add-to-group group-id="ToolsMenu" anchor="first"/>
        </action>
        <action id="runTestWithTrace"
                class="se.de.hu_berlin.informatik.vtdbg.samples.actions.RunTestWithTraceAction"
                text="Trace Run"
                description="runs test and collects execution trace">
            <add-to-group group-id="RunnerActions" anchor="last"/>
        </action> -->
    </actions>

    <extensions defaultExtensionNs="com.intellij">
        <toolWindow id="Trace" icon="AllIcons.General.Modified" anchor="right"
                    factoryClass="se.de.hu_berlin.informatik.vtdbg.coverage.MyToolWindowFactory"/>
    </extensions>

    <resource-bundle>messages.MyCoverageBundle</resource-bundle>
</idea-plugin>