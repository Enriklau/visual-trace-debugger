<idea-plugin>
    <id>se.de.hu_berlin.informatik.visual-trace-debugger</id>
    <name>Visual Trace Debugger</name>
    <category>Code Coverage</category>
    <vendor email="heiden@informatik.hu-berlin.de"
            url="https://www.informatik.hu-berlin.de/de/forschung/gebiete/se">HU-Berlin
    </vendor>

    <description>Visual debugging aid that allows the user to navigate within visual
        representations of execution traces.
    </description>

    <!-- please see https://www.jetbrains.org/intellij/sdk/docs/basics/getting_started/plugin_compatibility.html
         on how to target different products -->
    <!-- these dependencies register Test Listeners -->
    <!--<depends optional="true" config-file="testng-integration.xml">TestNG-J</depends>
    <depends optional="true" config-file="junit-integration.xml">JUnit</depends>-->

    <!-- this is the IntelliJ IDE coverage plugin. We extend its IDEA Coverage Runner! -->
    <depends>Coverage</depends>

    <depends>com.intellij.modules.platform</depends>

    <extensions defaultExtensionNs="com.intellij">
        <!-- application level service -->
        <!-- example taken from here: https://github.com/JetBrains/intellij-sdk-docs/tree/master/code_samples -->
        <!-- <applicationService serviceInterface="se.de.hu_berlin.informatik.vtdbg.samples.services.ProjectCountingService"
                            serviceImplementation="se.de.hu_berlin.informatik.vtdbg.samples.services.impl.ProjectCountingServiceImpl"/> -->

        <!-- project level service -->
        <!-- <projectService serviceInterface="se.de.hu_berlin.informatik.vtdbg.samples.services.MyProjectService"
                        serviceImplementation="se.de.hu_berlin.informatik.vtdbg.samples.services.impl.MyProjectServiceImpl"/> -->

        <!-- coverage runner extension - can be selected when editing Run Configuration -->
        <!--<projectConfigurable groupId="build" instance="se.de.hu_berlin.informatik.vtdbg.coverage.MyCoverageOptionsConfigurable" id="mycoverage"
                             bundle="messages.MyCoverageBundle" key="configurable.CoverageOptionsConfigurable.display.name"/>-->


        <!-- this installs a new configuration tab in style of the coverage configuration... -->
        <!--<runConfigurationExtension implementation="se.de.hu_berlin.informatik.vtdbg.coverage.MyCoverageJavaRunConfigurationExtension"/>-->
        <projectService serviceImplementation="se.de.hu_berlin.informatik.vtdbg.coverage.TraceDataManager"/>
        <projectService serviceImplementation="se.de.hu_berlin.informatik.vtdbg.coverage.view.MyViewManager"/>
        <coverageRunner implementation="se.de.hu_berlin.informatik.vtdbg.coverage.runner.IDEATraceCoverageRunner"/>
        <programRunner implementation="se.de.hu_berlin.informatik.vtdbg.coverage.runner.MyDefaultJavaCoverageRunner"/>
        <executor implementation="se.de.hu_berlin.informatik.vtdbg.coverage.runner.MyCoverageExecutor" />
        <!--<testActionProvider implementation="se.de.hu_berlin.informatik.vtdbg.coverage.MyTrackCoverageActionProvider"/>-->
    </extensions>

    <actions>
        <!--<group id="MyCoverageMenu">
            <action id="MySwitchCoverage" class="com.intellij.coverage.actions.SwitchCoverageSuiteAction" text="Show Co_verage Data..."/>
            <action id="MyGenerateCoverageReport" class="se.de.hu_berlin.informatik.vtdbg.coverage.MyGenerateCoverageReportAction"
                    text="_Generate Coverage Report..." icon="AllIcons.ToolbarDecorator.Export"/>
            <action id="MyHideCoverage" class="com.intellij.coverage.actions.HideCoverageInfoAction"/>
            <separator/>
        </group>
        <group id="MyCoveragePlatformMenu" popup="false">
            <reference ref="MyCoverageMenu"/>
            <add-to-group group-id="RunTestGroup" anchor="last"/>
        </group>-->
    </actions>

    <!-- some example listeners on application and project level -->
    <applicationListeners>
        <!-- <listener class="se.de.hu_berlin.informatik.vtdbg.samples.listeners.MyVfsListener"
                  topic="com.intellij.openapi.vfs.newvfs.BulkFileListener"/> -->
    </applicationListeners>

    <projectListeners>
        <!-- <listener class="se.de.hu_berlin.informatik.vtdbg.coverage.runner.listener.TraceDataListenerImpl"
                  topic="se.de.hu_berlin.informatik.vtdbg.coverage.runner.listener.TraceDataListener"/> -->
    </projectListeners>

    <extensions defaultExtensionNs="com.intellij">
        <!-- this makes the trace window always visible. not sure if that is what we want... -->
        <!-- <toolWindow id="Trace" icon="VisualTraceDebuggerIcons.VISUAL_TRACE" anchor="right" secondary="true"
                    factoryClass="se.de.hu_berlin.informatik.vtdbg.coverage.MyToolWindowFactory"/> -->
    </extensions>

    <resource-bundle>messages.MyCoverageBundle</resource-bundle>
</idea-plugin>